# This is a basic workflow that is manually triggered

name: Update Changelog

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
      
      createBuild:
        description: 'Create compiled executable?'
        default: 'true'
        required: true

jobs:
  update-changelog:
    runs-on: macos-latest

    steps:
    - name: Check Acccess
      uses: sushichop/action-repository-permission@v1
      with:
        required-permission: admin

    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Create branch
      run: git checkout -b create-release

    - name: Create binary
      if: github.event.inputs.createBuild == 'true'
      run: |
        swift build -c release --arch arm64 --arch x86_64
        cp .build/apple/Products/Release/changelog ./

    - name: Update changelog
      run: |
        MAC_OS_VERSION=$([[ "$OSTYPE" == "darwin"* ]] && sw_vers -productVersion)
        major="$(echo $MAC_OS_VERSION | awk 'BEGIN { FS="." } { print $1 }')"
        # For macOS 11 or lower while async/await works, it doesn't seem to work using the precompiled binary
        can_run_compiled_binary=$(if [[ $major -lt 12 ]]; then; echo 'false'; else; echo 'true'; fi)

        if [[ "$OSTYPE" == "darwin"* && "$can_run_compiled_binary" == "true" ]]; then
          ./changelog generate --repository=${{ github.repository }} --token=${{ secrets.GITHUB_TOKEN }} --output=./CHANGELOG.md --next-tag=v${{ github.event.inputs.version }}
        else
          swift run changelog generate --repository=${{ github.repository }} --token=${{ secrets.GITHUB_TOKEN }} --output=./CHANGELOG.md --next-tag=v${{ github.event.inputs.version }}
        fi

    - name: Push branch
      run: |
        git push origin create-release --force 
    
    - name: Create PR
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: create-release
        base: main
        commit-message: "Create release v${{ github.event.inputs.version }}"
        title: "Create release v${{ github.event.inputs.version }}"
        body: ":crown: Create release v${{ github.event.inputs.version }}"
